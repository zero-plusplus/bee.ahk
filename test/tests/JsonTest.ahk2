#Include ..\common.ahk2

class JsonTest {
  testParse(assert) {
    assert.deepEquals(bee.Json.parse('"abc"'), "abc")
    assert.deepEquals(bee.Json.parse('"\r\n"'), "`r`n")
    assert.deepEquals(bee.Json.parse('"123"'), "123")
    assert.deepEquals(bee.Json.parse('123'), 123)
    assert.deepEquals(bee.Json.parse('123.456'), 123.456)
    assert.deepEquals(bee.Json.parse('true'), true)
    assert.deepEquals(bee.Json.parse('false'), false)
    assert.deepEquals(bee.Json.parse('null'), bee.Json.null)
    assert.deepEquals(bee.Json.parse('"\u3042\u3044\u3046\u3048\u304a"'), "あいうえお")
    assert.deepEquals(bee.Json.parse("[ 1, [ 2,3 ] ]"), [ 1, [ 2, 3 ] ])
    assert.deepEquals(bee.Json.parse('{ "a": { "b": { "c": "" } } }'), { a: { b: { c: "" } } })
    assert.deepEquals(bee.Json.parse('{ "a": "value", "b": { "c": "value2" } }', (value, key, source) => (source.%key% := "")), { a: "", b: "" } )
  }
  testStringify(assert) {
    assert.equals(bee.Json.stringify({ a: { b: "abc"} }), '{a:{b:"abc"}}')
    assert.equals(bee.Json.stringify({ a: { b: "abc"} }, 2), '
    (
      {
        a: {
          b: "abc"
        }
      }
    )')
    assert.equals(bee.Json.stringify({ a: { b: "abc"} }, { space: true }), '{ a: { b: "abc" } }')
    assert.equals(bee.Json.stringify({ a: { b: "abc"} }, { replacer: (value, *) => (value == "abc" ? bee.Json.null : value) }), '{a:{b:null}}')
    assert.equals(bee.Json.stringify({ a: { b: "abc"}, c: "" }, { pick: [ "a" ] }), '{a:{}}')

    assert.equals(bee.Json.stringify([ 1, [ 2, [ 3 ] ] ]), "[1,[2,[3]]]")
    assert.equals(bee.Json.stringify([ 1, [ 2, [ 3 ] ] ], 2), '
    (
      [
        1,
        [
          2,
          [
            3
          ]
        ]
      ]
    )')
    assert.equals(bee.Json.stringify([ 1, [ 2, [ 3 ] ] ], { space: true }), "[ 1, [ 2, [ 3 ] ] ]")
    assert.equals(bee.Json.stringify([ 1, [ 2, [ 3 ] ] ], { replacer: (value, *) => (value == 1 ? bee.Json.null : value) }), '[null,[2,[3]]]')
    assert.equals(bee.Json.stringify([ 1, [ 2, [ 3 ] ] ], { pick: [ 1 ]}), "[1]")
  }
}