#Include ..\common.ahk2

class RangeLiteralTest {
  testRangeLiteral(assert) {
    assert.deepEquals(bee.RangeLiteral(1, 3), { start: { index: 1, reverse: false }, end: { index: 3, reverse: false }, excludeEnd: false, step: 1, unicodeMode: false })
    assert.deepEquals(bee.RangeLiteral("1..3"), { start: { index: 1, reverse: false }, end: { index: 3, reverse: false }, excludeEnd: true, step: 1, unicodeMode: false })

    assert.deepEquals(bee.RangeLiteral(1, 3, false), { start: { index: 1, reverse: false }, end: { index: 3, reverse: false }, excludeEnd: false, step: 1, unicodeMode: false })
    assert.deepEquals(bee.RangeLiteral("1...3"), { start: { index: 1, reverse: false }, end: { index: 3, reverse: false }, excludeEnd: false, step: 1, unicodeMode: false })

    assert.deepEquals(bee.RangeLiteral(1, "^1"), { start: { index: 1, reverse: false }, end: { index: 1, reverse: true }, excludeEnd: false, step: 1, unicodeMode: false })
    assert.deepEquals(bee.RangeLiteral(1, { index: 1, reverse: true }), { start: { index: 1, reverse: false }, end: { index: 1, reverse: true }, excludeEnd: false, step: 1, unicodeMode: false })
    assert.deepEquals(bee.RangeLiteral("1.."), { start: { index: 1, reverse: false }, end: { index: 1, reverse: true }, excludeEnd: true, step: 1, unicodeMode: false })

    assert.deepEquals(bee.RangeLiteral(1, "^2", true, 2), { start: { index: 1, reverse: false }, end: { index: 2, reverse: true }, excludeEnd: true, step: 2, unicodeMode: false })
    assert.deepEquals(bee.RangeLiteral(1, { index: 2, reverse: true }, true, 2), { start: { index: 1, reverse: false }, end: { index: 2, reverse: true }, excludeEnd: true, step: 2, unicodeMode: false })
    assert.deepEquals(bee.RangeLiteral("1..^2 step 2"), { start: { index: 1, reverse: false }, end: { index: 2, reverse: true }, excludeEnd: true, step: 2, unicodeMode: false })

    assert.deepEquals(bee.RangeLiteral("a", "c"), { start: { index: Ord("a"), reverse: false }, end: { index: Ord("c"), reverse: false }, excludeEnd: false, step: 1, unicodeMode: true })
    assert.deepEquals(bee.RangeLiteral("'a'..'c'"), { start: { index: Ord("a"), reverse: false }, end: { index: Ord("c"), reverse: false }, excludeEnd: true, step: 1, unicodeMode: true })
  }
}